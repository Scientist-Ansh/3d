/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { Colors } from '../utils/colors';
import { useFrame } from '@react-three/fiber';

export default function PlaneModel(props) {
  const bladeRef = useRef();
  const { nodes, materials } = useGLTF('/models/plane.glb');

  useFrame(({ clock }) => {
    bladeRef.current.rotation.x = clock.getElapsedTime() * 15;
  });
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.body.geometry}
        material={nodes.body.material}
        scale={[0.13, 0.1, 0.1]}
        material-color={Colors.red}
      >
        <meshStandardMaterial color={Colors.red} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.front.geometry}
        material={nodes.front.material}
        position={[0.05, 0, 0]}
        scale={[0.18, 0.1, 0.1]}
      >
        <meshStandardMaterial color={Colors.white} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rotar.geometry}
        material={nodes.rotar.material}
        position={[0.05, 0, 0]}
        scale={[0.18, 0.1, 0.1]}
      />
      <mesh
        ref={bladeRef}
        castShadow
        receiveShadow
        geometry={nodes.blade.geometry}
        material={nodes.blade.material}
        position={[-0.22, 0, 0]}
        scale={[0.18, 0.77, 0.1]}
      >
        <meshStandardMaterial color={Colors.brown} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tail.geometry}
        material={nodes.tail.material}
        position={[0.13, 0.06, 0]}
        rotation={[0, 0, -Math.PI]}
        scale={[-0.29, -0.15, -0.08]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.wings.geometry}
        material={nodes.wings.material}
        position={[-0.01, 0.04, 0]}
        rotation={[-1.57, Math.PI / 2, 0]}
        scale={[0.18, 1.19, 0.24]}
      />
    </group>
  );
}

useGLTF.preload('/models/plane.glb');
